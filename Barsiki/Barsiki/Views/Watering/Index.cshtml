@model Barsiki.Controllers.WateringViewModel

@{
    ViewData["Title"] = "Умная система полива";
}

<h1>Умная система полива растений</h1>

<div class="row">
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h5>Текущее состояние</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <strong>Режим:</strong>
                    <span id="mode-badge" class="badge @GetModeBadgeClass(Model.EventType)">
                        <span id="mode-text">@GetModeName(Model.EventType)</span>
                    </span>
                </div>
                <div class="mb-3">
                    <strong>Влажность почвы:</strong> <span id="moisture-value">@Model.CurrentMoisture%</span>
                    <div class="progress mt-2">
                        <div class="progress-bar @GetMoistureColor(Model.CurrentMoisture)" 
                             style="width: @Model.CurrentMoisture%"></div>
                    </div>
                </div>
                <div class="mb-3">
                    <strong>Порог полива:</strong> 
                    Авто @(Model.IsWatering ? "выкл." : "вкл.") при @(Model.IsWatering ? "<70%" : "<30%")
                </div>
                <div class="mb-3">
                    <strong>Состояние полива:</strong> 
                    <span id="watering-state" class="badge @(Model.IsWatering ? "bg-success" : "bg-secondary")">
                        @(Model.IsWatering ? "Включен" : "Выключен")
                    </span>
                </div>
               <form asp-action="ToggleWatering" method="post" class="mb-3">
                <div class="d-flex flex-wrap gap-2">
                    <button type="submit" name="enable" value="true" class="btn btn-outline-success">
                        Включить полив
                    </button>
                    <button type="submit" name="enable" value="false" class="btn btn-outline-success">
                        Выключить полив
                    </button>
                </div>
            </form>

            <div class="d-flex flex-wrap gap-2">
                <button class="btn btn-outline-success" onclick="setMode('manual')">Ручной режим</button>
                <button class="btn btn-outline-success" onclick="setMode('automatic')">Автоматический режим</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5>История поливов</h5>
            </div>
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Время</th>
                            <th>Тип события</th>
                            <th>Влажность</th>
                            <th>Состояние</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var record in Model.History)
                        {
                                <tr>
                                    <td>@record.Time.ToString("g")</td>
                                    <td>@GetEventTypeName(record.EventType)</td>
                                    <td>@record.MoistureLevel%</td>
                                    <td>
                                        <span class="badge @(record.WateringEnabled ? "bg-success" : "bg-secondary")">
                                        @(record.WateringEnabled ? "Вкл" : "Выкл")
                                        </span>
                                    </td>
                                </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetMoistureColor(int moisture)
    {
        if (moisture < 30) return "bg-danger";
        if (moisture < 60) return "bg-warning";
        return "bg-success";
    }

    string GetEventTypeName(string eventType)
    {
        return eventType switch
        {
            "manual" => "Ручное управление",
            "automatic" => "Автоматический",
            _ => "Датчик"
        };
    }

    string GetModeBadgeClass(string eventType)
    {
        return "border border-success text-success bg-white";
    }


    string GetModeName(string eventType)
    {
        return eventType switch
        {
            "automatic" => "Автоматический режим",
            "manual" => "Ручное управление",
            _ => "Мониторинг"
        };
    }
}

@section Scripts {
        <script>
            function setMode(mode) {
                fetch(`/Watering/SetMode?mode=${mode}`, { method: 'POST' })
                    .then(() => {
                        refreshStatus();
                    });
            }

            function refreshStatus() {
                fetch('/Watering/GetCurrentStatus')
                    .then(response => response.json())
                    .then(data => {
                        // Влажность
                        document.getElementById('moisture-value').textContent = data.moisture + '%';

                        const bar = document.querySelector('.progress-bar');
                        bar.style.width = data.moisture + '%';
                        bar.className = 'progress-bar';
                        if (data.moisture < 30) bar.classList.add('bg-danger');
                        else if (data.moisture < 60) bar.classList.add('bg-warning');
                        else bar.classList.add('bg-success');

                        // Состояние полива
                        const badge = document.getElementById('watering-state');
                        badge.textContent = data.watering ? 'Включен' : 'Выключен';
                        badge.className = 'badge ' + (data.watering ? 'bg-success' : 'bg-secondary');

                        // Режим
                        const modeBadge = document.getElementById('mode-badge');
                        const modeText = document.getElementById('mode-text');

                        let modeName = '';
                        let badgeClass = 'badge border border-success text-success bg-white';

                        if (data.source === 'manual') {
                            modeName = 'Ручное управление';
                        } else if (data.source === 'automatic') {
                            modeName = 'Автоматический режим';
                        } else {
                            modeName = 'Мониторинг';
                        }

                        modeBadge.className = badgeClass;
                        modeText.textContent = modeName;
                    });
            }

            setInterval(refreshStatus, 2000);
        </script>
}
